C:\Programi\ffmpeg\bin>ffmpeg -y -i "C:\D\ff\The Mating Habits Of The Earthbound Human.mp4" -i "C:\D\ff\1test.srt" -c:v libx264 -preset veryfast -crf 24 -c:a libmp3lame -b:a 128k -c:s srt "C:\D\ff\test.mkv"

to add language metadata (insert before output file) "-metadata:s:s:0 language=eng"

ffmpeg -y -i "C:\D\Matrix\The Matrix (1999).mkv" -f srt -i "C:\D\Matrix\The Matrix (1999).no.srt" -c:v copy -c:a copy -c:s mov_text -metadata:s:s:0 language=nob "C:\D\Matrix\The Matrix (1999).1.mp4"

ffmpeg -i input.mp4 -i subtitles.srt -c copy -c:s mov_text -map 0 -map 1 -map_metadata 0 output.mp4


Copy video and encode only 1st audio stream with amplification of 2.5 dB:
ffmpeg -y -i "C:\D\ff\Death At A Funeral (2007).mp4" -c:v copy -c:a:0 libmp3lame -b:a 128k -af volume=2.5 "C:\D\ff\Death At A Funeral (2007).1.mp4"

Add srt as stream and select only 1st audio track with amplification:
ffmpeg -y -i "C:\D\ff\Death At A Funeral (2007).x.mp4" -f srt -i  "C:\D\ff\Death At A Funeral (2007).srt" -c:v copy -c:a:0 libmp3lame -b:a 128k -af volume=1.5 -c:s mov_text "C:\D\ff\Death At A Funeral (2007).1.mp4"

rotate video 180 degrees:
ffmpeg -y -i "C:\D\ff\2015_07_03\20150701_155124.1.mp4" -vf "vflip" "C:\D\ff\2015_07_03\20150701_155124.2.mp4"

rotate clockwise:
ffmpeg -y -i "C:\D\ff\2015_07_03\20150630_190031.1.mp4" -vf "transpose=1" "C:\D\ff\2015_07_03\20150630_190031.2.mp4"

rotate counter clockwise:
ffmpeg -y -i "C:\D\ff\2015_07_03\20150630_190031.1.mp4" -vf "transpose=2" "C:\D\ff\2015_07_03\20150630_190031.2.mp4"

get streams info:
ffprobe -v quiet -print_format json -show_format -show_streams "C:\downloads\ff\test.mp4"

hard subtitles - video overlay:
ffmpeg -i input.wmv -vf "subtitles=sub.srt" \
  -c:v libx264 -crf 20 \
  -c:a aac -b:a 192k
  output.mp4
																		???
C:\Programi\ffmpeg>ffmpeg -y -i "C:\downloads\ff\test.mp4" -vf "subtitles=test.srt" -c:v libx264 -c:a copy "C:\downloads\ff\test.s.mp4"


Extract image from video
Use -qscale:v (or the alias -q:v) as an output option. Effective range for JPEG is 2-31 with 31 being the worst quality. I recommend trying values of 2-5.

To output a series of images:

ffmpeg -i input.mp4 -qscale:v 2 output_%03d.jpg
To output a single image at ~60 seconds duration:

ffmpeg -ss 60 -i "C:\downloads\ff\test.mp4" -qscale:v 2 -vframes 1 "C:\downloads\ff\test.jpg"
/c  ffmpeg -ss 60 -i "C:\downloads\ff\mala_ila.mp4" -qscale:v 2 -vframes 1 "C:\Users\ba100065\Documents\Visual Studio 2015\Projects\VTC\bin\Release\test.jpg"

ffplay -vf scale=1280:-1 "C:\downloads\ff\test.3.mkv"

To join 2 or more files:
C:\Programi\ffmpeg>ffmpeg -f concat -i "C:\downloads\ff\spoji.txt" -c copy "C:\downloads\ff\sekspir.
mpg"
...
spoji.txt:
file C:\\downloads\\ff\\HRT-TV1-1.mpg
file C:\\downloads\\ff\\HRT-TV1-2.mpg
....

JSON deserialize:

public class Account
{
    public string Email { get; set; }
    public bool Active { get; set; }
    public DateTime CreatedDate { get; set; }
    public List<string> Roles { get; set; }
}

Account account = new Account
{
    Email = "james@example.com",
    Active = true,
    CreatedDate = new DateTime(2013, 1, 20, 0, 0, 0, DateTimeKind.Utc),
    Roles = new List<string>
    {
        "User",
        "Admin"
    }
};

string json = @"{
  'Active': false,
  'Roles': [
    'Expired'
  ]
}";

JsonConvert.PopulateObject(json, account);
...
Console.WriteLine(string.Join(", ", account.Roles.ToArray()));
// User, Admin, Expired

ffmpeg json:
video: find streams[x].codec_type == "video"
streams[0].index = 0
streams[0].codec_long_name = "h264"	//format string
streams[0].profile = "High"
streams[0].coded_width = 1920
streams[0].coded_height = 1080
streams[0].r_frame_rate = 30000/1001
streams[0].duration = 75.608867
streams[0].bit_rate = 6881514
...
audio: find all streams (array) streams[x].codec_type == "audio"
streams[1].index = 1
streams[1].codec_long_name = "mp3"	//format string
streams[1].channel_layout = ""mono""
streams[1].duration = 75.608867		// use if only audio present
streams[1].bit_rate = 128000		// use if only audio present
streams[1].tags.language = "eng"
...
subtitle: find all streams (array) streams[x].codec_type == "subtitle"
streams[2].index = 2
streams[2].codec_name = "mov_text"
streams[2].tags.language = "und"
...
format.filename = "C:\\downloads\\ff\\test.2.mp4"
format.size = 66339827


H.265 HEVC
ffmpeg -threads 64 -y -i "C:\downloads\ff\h265.mkv" -map 0:0 -map 0:1? -c:v copy -c:a copy "C:\downloads\ff\h265.1.mp4"

C:\Programi\ffmpeg>ffmpeg -threads 3 -y -i "C:\downloads\ff\Seven Samurai (1954).mp4" -map 0:0 -map
0:1? -map 0:2 -c:v hevc_qsv -load_plugin hevc_hw -preset fast -crf 28 -c:a copy -c:s copy "C:\downlo
ads\ff\Seven Samurai (1954).h265.mp4"

# copy first 30 seconds to output
ffmpeg -ss 00:00:00 -i input.mp4 -t 00:00:30 ouput.mp4

# downmix 5.1 or 7.1 audio to stereo
ffmpeg -i "input.mp4" -map 0:0 -map 0:1? -c:v libx264 -preset veryfast -crf 23 -ac 2 -c:a aac -b:a 128k "output.mp4"